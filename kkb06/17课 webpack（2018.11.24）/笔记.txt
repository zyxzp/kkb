老师，请教一个问题，ajax的一个参数为数组类型参数，我的.net后台方法指定了这个数组参数类型为 clientmodel[] arr这种，但是我总是接收不到参数在后台，我在ajax里加了阻止深度序列化的属性（traditional: true），但是还是不行

1. 希望能讲讲lodash.js的减小文件大小配置原理。 使用new LodashModuleReplacementPlugin()。 据说能够做到  import _ from 'lodash'    _.add(1, 2) // 打包时只会引入这一个函数模块，这是如何实现的？

2. 希望能讲讲moment.js的减小文件大小配置原理。 以下两个插件是之前搜索到的，但不懂是什么意思。 new webpack.ContextReplacementPlugin(/moment[\/\\]locale$/, /de|fr|hu/), new webpack.IgnorePlugin(/^\.\/locale$/, /moment$/),

3. 在webpack配置中设置了，resolve: { alias: { utils: path.resolve(__dirname, '../src/utils') } }。 在utils/index.js中引入了多个模块。每次打包的时候似乎都会把所有模块都打包起来。而我希望有被使用的才打包，要怎么办？

import jquery from 'jquery';
let jquery=import('jquery');

--------------------------------------------------------------------------------

1.webpack唯一的功能：打包
2.loader

--------------------------------------------------------------------------------

webpack.config.js
module.exports={
  mode: 'none', 'production', 'development',
  entry: '入口'||{rukou1: 'xx', rukou2: 'xxx'},
  output: {
    path,
    filename
  }
};

--------------------------------------------------------------------------------

单入口、多入口

--------------------------------------------------------------------------------

loader——帮助webpack处理js以外的文件

--------------------------------------------------------------------------------

下载
npm i style-loader css-loader

--------------------------------------------------------------------------------

postcss-loader
autoprefixer

--------------------------------------------------------------------------------

file-loader   读取并且输出文件
url-loader    读取并且输出base64

--------------------------------------------------------------------------------

import { subString, assign } from 'utils' => xxxloader =>
import subString from 'xxx'
import assign from 'xxx'

--------------------------------------------------------------------------------

dev-server
1.下载
  webpack webpack-cli webpack-dev-server

2.直接启动不行，必须放在scripts
  "scripts": {
    ...,
    "start": "webpack-dev-server"
  }

3.直接访问
  注意路径

--------------------------------------------------------------------------------

代码质量-eslint

--------------------------------------------------------------------------------

测试——单元测试
jest

--------------------------------------------------------------------------------
